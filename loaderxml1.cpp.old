/**
* LoaderXML
* cargador de archivo XML
*
*
*   @Autor Julio César Gambandé
*   @Fecha 15 de febrero del 2020
*   @Email gambande.julio@gmail.com
*/


#include "loaderxml.h"


LoaderXML::LoaderXML(){

}

void LoaderXML::open(string archivo){
  ifstream input;
  string buffer;
  input.open(archivo);
  char* chararry;
  string auxil;
  Entidad* punta;
  string temp;
  bool fin=false;

  enum{
    CH, //Crea Hijo y asigna padre
    T,  //Etapa inetermedia en la busqueda de atributos
    V,  //Copia valor
    CN, //Carga valor y Copia nombre de objeto
    A,  //Copia nombre atributo
    VA, //Copia valor de atributo
    AA, //Carga atributo con su valor
    VP, //Vuelve al padre
    CHU,//Crea hijo unico
    CON,//Compara nombre
  }estado = V;

  punta = root = new Entidad("root");

  while(!input.eof()){
    input>>buffer;
    chararry= bufer.c_str();
    for(i=0; i<buffer.size();i++){
      fin = (buffer[i] != ' ') || (buffer[i] != '/') || (buffer[i] != '>');
      switch (estado) {
        case T:
          if(buffer[i] == ' '){
            //nada
          }else if(buffer[i] == '>'){
            temp.clear();
            estado=V;
          }else{
            temp.clear();
            estado=A;
          }
          break;
        case V:
          if(buffer[i] != '<')
            temp.push_back(buffer[i]);
          else{
            punta.AddValor(temp);
            temp.clear();
            estado=CN;
          }
          break;
        case CN:
          if(buffer[i]== ' '){
            estado=CH;
            punta = punta.AddHijo(new Entidad(temp));
            estado=T;
          }else if (buffer[i]== '>'){
            estado=CH;
            punta = punta.AddHijo(new Entidad(temp));
            temp.clear();
            estado=V;
          }else if(buffer[i]=='/' && buffer[i+1]=='>'){
            estado=CON;
            if(!temp.compare(punta.getname())){
              estado=VP;
              punta= punta.getPadre();
              temp.clear();
              estado=V;
            }else{
              estado=CHU;
              punta.AddHijo(new Entidad(temp));
              temp.clear();
              estado=V;
            }
          }else{
            temp.push_back(buffer[i]);
          }
          break;
        case A:
          if(fin){
            punta.AddAtributo(temp,NULL);
            if(buffer[i] == ' '){
              estado=AA;
              estado=T;
            }else if(buffer[i] == '>'){
              estado=AA;
              temp.clear();
              estado=V;
            }else if(buffer[i] == '/' && buffer[i+1] == '>' ){
              estado=AA;
              punta= punta.getPadre();
              temp.clear();
              estado=V;
            }
          }else if((buffer[i] == '=') && (buffer[i+1] == '\"')){ //TODO: ver aca!
            auxil=temp;
            temp.clear();
            estado=VA;
          }else{
            temp.push_back(buffer[i]);
          }
          break;
        case VA:
          if(buffer[i] == '\"'){
            estado=AA;
            punta.AddAtributo(auxil,temp);
            estado=T;
          }
          break;
      }
    }
  }


}
